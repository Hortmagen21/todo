{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","state","todoList","activeItem","id","title","completed","editing","fetchTasks","bind","handleChange","handleSubmit","getCookie","deleteItem","startEdit","strikeUnstrike","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","this","fetch","then","response","json","data","setState","e","value","target","preventDefault","csrftoken","url","method","headers","body","JSON","stringify","catch","error","console","log","task","tasks","self","className","onSubmit","style","flex","onChange","type","placeholder","map","index","onClick","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.82748925.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nclass App extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      todoList:[],\n      activeItem:{\n        id: null,\n        title:'',\n        completed:false,\n      },\n      editing: false,\n    }\n    this.fetchTasks = this.fetchTasks.bind(this)\n    this.handleChange = this.handleChange.bind(this)\n    this.handleSubmit = this.handleSubmit.bind(this)\n    this.getCookie = this.getCookie.bind(this)\n    this.deleteItem = this.deleteItem.bind(this)\n    this.startEdit = this.startEdit.bind(this)\n    this.strikeUnstrike = this.strikeUnstrike.bind(this)\n\n  };\n\n  getCookie(name) {\n    let cookieValue = null;\n    if (document.cookie && document.cookie !== '') {\n        const cookies = document.cookie.split(';');\n        for (let i = 0; i < cookies.length; i++) {\n            const cookie = cookies[i].trim();\n            // Does this cookie string begin with the name we want?\n            if (cookie.substring(0, name.length + 1) === (name + '=')) {\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n                break;\n            }\n        }\n    }\n    return cookieValue;\n}\n\n  componentWillMount(){\n    this.fetchTasks();\n  }\n\n  fetchTasks(){\n    fetch('https://weblaba1.herokuapp.com/main/task-list/')\n    .then(response=> response.json())\n    .then(data =>\n      this.setState({\n        todoList:data\n\n      })\n    )\n  }\n\n  handleChange(e){\n    //var name = e.target.name\n    var value = e.target.value\n    this.setState({\n      activeItem:{\n        ...this.state.activeItem,\n        title: value\n      }\n    })\n  }\n\n  handleSubmit(e){\n    e.preventDefault()\n    var csrftoken = this.getCookie('csrftoken')\n    var url = 'https://weblaba1.herokuapp.com/main/task-create/'\n\n    if(this.state.editing === true){\n      url = `https://weblaba1.herokuapp.com/main/task-update/${this.state.activeItem.id}/`\n      this.setState({\n        editing:false,\n      })\n\n    }\n    fetch(url, {\n      method:'POST',\n      headers:{\n        'Content-type':'application/json',\n        'X-CSRFToken': csrftoken,\n      },\n      body:JSON.stringify(this.state.activeItem)\n    }).then(\n      (response) => {\n        this.fetchTasks()\n        this.setState({\n          activeItem:{\n            id: null,\n            title:'',\n            completed:false,\n          }\n        })\n      }).catch(function(error){\n        console.log('ERROR', error)\n      })\n  }\n\n  startEdit(task){\n    this.setState({\n      activeItem: task,\n      editing:true,\n    })\n  }\n\ndeleteItem(task){\n  var csrftoken = this.getCookie('csrftoken')\n  fetch(`https://weblaba1.herokuapp.com/main/task-delete/${task.id}/`,{\n    method:'DELETE',\n    headers:{\n      'Content-type':'application/json',\n      'X-CSRFToken': csrftoken,\n    },\n  }).then((response)=>{\n    this.fetchTasks()\n  })\n}\n\nstrikeUnstrike(task){\n  var csrftoken = this.getCookie('csrftoken')\n  var url = `https://weblaba1.herokuapp.com/main/task-update/${task.id}/`\n  task.completed = !task.completed\n  fetch(url, {\n    method:'POST',\n    headers:{\n      'Content-type':'application/json',\n      'X-CSRFToken': csrftoken,\n    },\n    body: JSON.stringify({'completed': task.completed, 'title':task.title})\n  }).then((response)=>{\n    this.fetchTasks()\n  })\n\n}\n\n  render(){\n    var tasks = this.state.todoList\n    var self = this\n    return (\n      <div className=\"container\">\n        <div id=\"task-container\">\n          <div id=\"form-wrapper\">\n            <form onSubmit={this.handleSubmit} id=\"form\">\n              <div className=\"flex-wrapper\">\n                <div style={{flex: 6}}>\n                  <input onChange={this.handleChange} className=\"form-control\" id=\"title\" value={this.state.activeItem.title} type=\"text\" name=\"title\" placeholder=\"Add task\"/>\n                </div>\n                <div style={{flex: 1}}>\n                  <input className=\"btn btn-warning\" id=\"submit\" type=\"submit\" name=\"Add\"/>\n                </div>\n              </div>\n            </form>\n          </div>\n          <div id=\"list-wrapper\">\n            {tasks.map(function(task, index){\n              return (\n                <div key= {index} className=\"task-wrapper flex-wrapper\">\n                  <div onClick={()=> self.strikeUnstrike(task)} style={{flex:7}}>\n                    {task.completed == false ? (<span>{task.title}</span>) : (<strike>{task.title}</strike>)}\n                  </div>\n                  <div style={{flex:1}}>\n                    <button onClick={()=> self.startEdit(task)} className=\"btn btn-sm btn-outline-info\">Edit</button>\n                  </div>\n                  <div style={{flex:1}}>\n                      <button onClick={()=> self.deleteItem(task)} className=\"btn btn-sm btn-outline-dark delete\">X</button>\n                  </div>\n                </div>\n              )\n            })}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}